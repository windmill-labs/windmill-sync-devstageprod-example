summary: Back-Office of an E-Commerce Business
value:
  css:
    aggridcomponent: {}
    app:
      component:
        class: ''
        style: ''
      grid:
        class: ''
        style: ''
      viewer:
        class: ''
        style: ''
    barchartcomponent:
      container:
        class: ''
        style: ''
    buttoncomponent:
      button:
        class: ''
        style: ''
    checkboxcomponent:
      text:
        class: ''
        style: ''
    containercomponent:
      container:
        class: ''
        style: ''
    currencycomponent:
      input:
        class: ''
        style: ''
    dateinputcomponent:
      input:
        class: ''
        style: ''
    displaycomponent:
      container:
        class: ''
        style: ''
      header:
        class: ''
        style: ''
    drawercomponent: {}
    fileinputcomponent:
      container:
        class: ''
        style: ''
    formbuttoncomponent:
      button:
        class: ''
        style: ''
      popup:
        class: ''
        style: ''
    formcomponent:
      button:
        class: ''
        style: ''
      container:
        class: ''
        style: ''
    horizontaldividercomponent:
      container:
        class: ''
        style: ''
      divider:
        class: ''
        style: ''
    horizontalsplitpanescomponent:
      container:
        class: ''
        style: ''
    htmlcomponent:
      container:
        class: ''
        style: ''
    iconcomponent:
      container:
        class: ''
        style: ''
      icon:
        class: ''
        style: ''
    imagecomponent:
      image:
        class: ''
        style: ''
    mapcomponent:
      map:
        class: ''
        style: ''
    multiselectcomponent:
      input:
        style: ''
    numberinputcomponent:
      input:
        class: ''
        style: ''
    passwordinputcomponent:
      input:
        class: ''
        style: ''
    piechartcomponent:
      container:
        class: ''
        style: ''
    plotlycomponent: {}
    rangecomponent:
      handles:
        style: ''
      limits:
        class: ''
        style: ''
      values:
        class: ''
        style: ''
    scatterchartcomponent:
      container:
        class: ''
        style: ''
    selectcomponent:
      input:
        style: ''
    slidercomponent:
      value:
        class: ''
        style: ''
      handle:
        style: ''
      limits:
        class: ''
        style: ''
    tablecomponent:
      container:
        class: ''
        style: ''
      tableBody:
        class: ''
        style: ''
      tableFooter:
        class: ''
        style: ''
      tableHeader:
        class: ''
        style: ''
    tabscomponent:
      allTabs:
        class: ''
        style: ''
      container:
        class: ''
        style: ''
      selectedTab:
        class: ''
        style: ''
      tabRow:
        class: ''
        style: ''
    textcomponent:
      text:
        class: ''
        style: ''
    textinputcomponent:
      input:
        class: ''
        style: ''
    timeseriescomponent:
      container:
        class: ''
        style: ''
    vegalitecomponent: {}
    verticaldividercomponent:
      container:
        class: ''
        style: ''
      divider:
        class: ''
        style: ''
    verticalsplitpanescomponent:
      container:
        class: ''
        style: ''
  fullscreen: true
  grid:
    - '12':
        id: c
        fixed: false
        h: 1
        w: 12
        x: 0
        y: 0
      '3':
        fixed: false
        h: 1
        w: 1
        x: 0
        y: 8
      id: c
      data:
        id: c
        type: textcomponent
        componentInput:
          type: template
          value: 'Hello ${ctx.username}'
          eval: >-
            Note: all editing actions have been disabled in the present example
            as they would affect parent database.
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          style:
            type: static
            value: Body
          tooltip:
            type: static
            value: ''
        customCss:
          text:
            class: ''
            style: 'color: #177cc8;'
        horizontalAlignment: left
        verticalAlignment: top
    - '12':
        id: f
        fixed: false
        h: 1
        w: 12
        x: 0
        y: 1
      '3':
        fixed: false
        h: 1
        w: 1
        x: 1
        y: 8
      id: f
      data:
        id: f
        type: textcomponent
        componentInput:
          type: template
          value: 'Hello ${ctx.username}'
          eval: 'Tutorial: https://docs.windmill.dev/docs/apps/app_e-commerce'
          fieldType: template
        configuration:
          copyButton:
            type: static
            value: false
          style:
            type: static
            value: Body
          tooltip:
            type: static
            value: ''
        customCss:
          text:
            class: ''
            style: ''
        horizontalAlignment: left
        verticalAlignment: top
    - '12':
        id: a
        customDragger: false
        customResizer: false
        draggable: true
        fixed: true
        h: 22
        max:
          h: 100
          w: 12
        min:
          h: 1
          w: 1
        resizable: true
        w: 12
        x: 0
        y: 2
      '3':
        customDragger: false
        customResizer: false
        draggable: true
        fixed: true
        h: 8
        max:
          h: 100
          w: 3
        min:
          h: 1
          w: 1
        resizable: true
        w: 2
        x: 0
        y: 0
      id: a
      data:
        id: a
        type: tabscomponent
        card: false
        configuration:
          noPadding:
            type: static
            value: true
            fieldType: boolean
            onlyStatic: true
          tabsKind:
            type: static
            value: null
        customCss:
          allTabs:
            class: ''
            style: ''
          container:
            class: ''
            style: ''
          selectedTab:
            class: ''
            style: ''
          tabRow:
            class: ''
            style: ''
        numberOfSubgrids: 4
        softWrap: true
        tabs:
          - Products
          - Orders
          - Users
          - Manuel order
  hiddenInlineScripts:
    - name: loadProducts
      autoRefresh: true
      fields:
        auth:
          type: static
          value: '$res:f/examples/demo_supabase'
          fieldType: object
          format: resource-supabase
        columns:
          type: static
          value: null
          fieldType: string
        count:
          type: static
          value: null
          fieldType: string
        filter:
          type: static
          value: null
          fieldType: object
        head:
          type: static
          value: null
          fieldType: boolean
        limit:
          type: static
          value: null
          fieldType: object
        order:
          type: static
          value: null
          fieldType: object
        table:
          type: static
          value: products
          fieldType: string
      inlineScript:
        content: >
          import { Resource } from
          "https://deno.land/x/windmill@v1.70.1/mod.ts";

          import { createClient } from "https://esm.sh/@supabase/supabase-js@2";


          /**
           * @param count Count algorithm to use to count rows in the table or view.
           * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the hood.
           * `"planned"`: Approximated but fast count algorithm. Uses the Postgres statistics under the hood.
           * `"estimated"`: Uses exact count for low numbers and planned count for high numbers.
           *
           * @param head When set to `true`, `data` will not be returned.
           * Useful if you only need the count.
           * 
           * @param filter Learn more at https://supabase.com/docs/reference/javascript/filter
           * 
           * @param order Learn more at https://supabase.com/docs/reference/javascript/order
           * 
           * @param limit Learn more at https://supabase.com/docs/reference/javascript/limit
           */
          export async function main(
            auth: Resource<"supabase">,
            table: string,
            columns?: string,
            count?: "exact" | "planned" | "estimated",
            head?: boolean,
            filter?: {
              column: string;
              operator: string;
              value: any;
            },
            order?: {
              column: string;
              foreignTable: string;
              ascending?: boolean;
              nullsFirst?: boolean;
            },
            limit?: {
              count: number;
              foreignTable?: string;
            },
          ) {
            const client = createClient(auth.url, auth.key);
            const options = (head || count) ? { head, count } : undefined;
            let query = client.from(table).select(columns || undefined, options);
            if (filter?.column) {
              query = query.filter(filter.column, filter.operator, filter.value);
            }
            if (order?.column) {
              const { column, ...options } = order;
              query = query.order(column, options);
            }
            if (limit?.count) {
              const { count, foreignTable } = limit;
              query = query.limit(count, foreignTable ? { foreignTable } : undefined);
            }

            return await query;
          }
        language: deno
        path: /loadProducts
        schema:
          $schema: 'https://json-schema.org/draft/2020-12/schema'
          type: object
          properties:
            auth:
              type: object
              description: ''
              default: null
              format: resource-supabase
            columns:
              type: string
              description: ''
              default: null
            count:
              type: string
              description: ''
              default: null
              enum:
                - exact
                - planned
                - estimated
            filter:
              type: object
              description: ''
              default: null
              properties:
                value:
                  type: object
                  description: ''
                column:
                  type: string
                  description: ''
                operator:
                  type: string
                  description: ''
            head:
              type: boolean
              description: ''
              default: null
            limit:
              type: object
              description: ''
              default: null
              properties:
                count:
                  type: number
                  description: ''
                foreignTable:
                  type: string
                  description: ''
            order:
              type: object
              description: ''
              default: null
              properties:
                ascending:
                  type: boolean
                  description: ''
                column:
                  type: string
                  description: ''
                foreignTable:
                  type: string
                  description: ''
                nullsFirst:
                  type: boolean
                  description: ''
            table:
              type: string
              description: ''
              default: null
          required:
            - auth
            - table
      recomputeOnInputChanged: true
    - name: getProductImageUrl
      autoRefresh: true
      fields:
        productId:
          type: connected
          value: null
          connection:
            componentId: j
            path: selectedRow.id
          fieldType: string
        products:
          type: connected
          value: null
          connection:
            componentId: bg_0
            path: result.data
          fieldType: array
      inlineScript:
        content: |
          export async function main(productId: string, products: any[]) {
            return products.find((p) => p.id === productId).image_url;
          }
        language: deno
        path: /getProductImageUrl
        schema:
          $schema: 'https://json-schema.org/draft/2020-12/schema'
          type: object
          properties:
            productId:
              type: string
              description: ''
              default: null
            products:
              type: array
              description: ''
              default: null
              items:
                type: string
          required:
            - productId
            - products
      recomputeOnInputChanged: true
    - name: loadOrders
      autoRefresh: true
      fields:
        auth:
          type: static
          value: '$res:f/examples/demo_supabase'
          fieldType: object
          format: resource-supabase
        columns:
          type: static
          value: null
          fieldType: string
        count:
          type: static
          value: null
          fieldType: string
        filter:
          type: static
          value: null
          fieldType: object
        head:
          type: static
          value: null
          fieldType: boolean
        limit:
          type: static
          value: null
          fieldType: object
        order:
          type: static
          value: null
          fieldType: object
        table:
          type: static
          value: orders
          fieldType: string
      inlineScript:
        content: >
          import { Resource } from
          "https://deno.land/x/windmill@v1.70.1/mod.ts";

          import { createClient } from "https://esm.sh/@supabase/supabase-js@2";





          /**
           * @param count Count algorithm to use to count rows in the table or view.
           * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the hood.
           * `"planned"`: Approximated but fast count algorithm. Uses the Postgres statistics under the hood.
           * `"estimated"`: Uses exact count for low numbers and planned count for high numbers.
           *
           * @param head When set to `true`, `data` will not be returned.
           * Useful if you only need the count.
           * 
           * @param filter Learn more at https://supabase.com/docs/reference/javascript/filter
           * 
           * @param order Learn more at https://supabase.com/docs/reference/javascript/order
           * 
           * @param limit Learn more at https://supabase.com/docs/reference/javascript/limit
           */
          export async function main(
            auth: Resource<"supabase">,
            table: string,
            columns?: string,
            count?: "exact" | "planned" | "estimated",
            head?: boolean,
            filter?: {
              column: string;
              operator: string;
              value: any;
            },
            order?: {
              column: string;
              foreignTable: string;
              ascending?: boolean;
              nullsFirst?: boolean;
            },
            limit?: {
              count: number;
              foreignTable?: string;
            },
          ) {
            const client = createClient(auth.url, auth.key);
            const options = (head || count) ? { head, count } : undefined;
            let query = client.from(table).select(columns || undefined, options);
            if (filter?.column) {
              query = query.filter(filter.column, filter.operator, filter.value);
            }
            if (order?.column) {
              const { column, ...options } = order;
              query = query.order(column, options);
            }
            if (limit?.count) {
              const { count, foreignTable } = limit;
              query = query.limit(count, foreignTable ? { foreignTable } : undefined);
            }

            return await query;
          }
        language: deno
        path: /loadOrders
        schema:
          $schema: 'https://json-schema.org/draft/2020-12/schema'
          type: object
          properties:
            auth:
              type: object
              default: null
              format: resource-supabase
            columns:
              type: string
              default: null
            count:
              type: string
              default: null
              enum:
                - exact
                - planned
                - estimated
            filter:
              type: object
              default: null
              properties:
                value:
                  type: object
                column:
                  type: string
                operator:
                  type: string
            head:
              type: boolean
              default: null
            limit:
              type: object
              default: null
              properties:
                count:
                  type: number
                foreignTable:
                  type: string
            order:
              type: object
              default: null
              properties:
                ascending:
                  type: boolean
                column:
                  type: string
                foreignTable:
                  type: string
                nullsFirst:
                  type: boolean
            table:
              type: string
              default: null
          required:
            - auth
            - table
      recomputeOnInputChanged: true
    - name: loadCustomers
      autoRefresh: true
      fields:
        auth:
          type: static
          value: '$res:f/examples/demo_supabase'
          fieldType: object
          format: resource-supabase
        columns:
          type: static
          value: null
          fieldType: string
        count:
          type: static
          value: null
          fieldType: string
        filter:
          type: static
          value: null
          fieldType: object
        head:
          type: static
          value: null
          fieldType: boolean
        limit:
          type: static
          value: null
          fieldType: object
        order:
          type: static
          value: null
          fieldType: object
        table:
          type: static
          value: customers
          fieldType: string
      inlineScript:
        content: >
          import { Resource } from
          "https://deno.land/x/windmill@v1.70.1/mod.ts";

          import { createClient } from "https://esm.sh/@supabase/supabase-js@2";



          /**
           * @param count Count algorithm to use to count rows in the table or view.
           * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the hood.
           * `"planned"`: Approximated but fast count algorithm. Uses the Postgres statistics under the hood.
           * `"estimated"`: Uses exact count for low numbers and planned count for high numbers.
           *
           * @param head When set to `true`, `data` will not be returned.
           * Useful if you only need the count.
           * 
           * @param filter Learn more at https://supabase.com/docs/reference/javascript/filter
           * 
           * @param order Learn more at https://supabase.com/docs/reference/javascript/order
           * 
           * @param limit Learn more at https://supabase.com/docs/reference/javascript/limit
           */
          export async function main(
            auth: Resource<"supabase">,
            table: string,
            columns?: string,
            count?: "exact" | "planned" | "estimated",
            head?: boolean,
            filter?: {
              column: string;
              operator: string;
              value: any;
            },
            order?: {
              column: string;
              foreignTable: string;
              ascending?: boolean;
              nullsFirst?: boolean;
            },
            limit?: {
              count: number;
              foreignTable?: string;
            },
          ) {
            const client = createClient(auth.url, auth.key);
            const options = (head || count) ? { head, count } : undefined;
            let query = client.from(table).select(columns || undefined, options);
            if (filter?.column) {
              query = query.filter(filter.column, filter.operator, filter.value);
            }
            if (order?.column) {
              const { column, ...options } = order;
              query = query.order(column, options);
            }
            if (limit?.count) {
              const { count, foreignTable } = limit;
              query = query.limit(count, foreignTable ? { foreignTable } : undefined);
            }

            return await query;
          }
        language: deno
        path: /loadCustomers
        schema:
          $schema: 'https://json-schema.org/draft/2020-12/schema'
          type: object
          properties:
            auth:
              type: object
              description: ''
              default: null
              format: resource-supabase
            columns:
              type: string
              description: ''
              default: null
            count:
              type: string
              description: ''
              default: null
              enum:
                - exact
                - planned
                - estimated
            filter:
              type: object
              description: ''
              default: null
              properties:
                value:
                  type: object
                  description: ''
                column:
                  type: string
                  description: ''
                operator:
                  type: string
                  description: ''
            head:
              type: boolean
              description: ''
              default: null
            limit:
              type: object
              description: ''
              default: null
              properties:
                count:
                  type: number
                  description: ''
                foreignTable:
                  type: string
                  description: ''
            order:
              type: object
              description: ''
              default: null
              properties:
                ascending:
                  type: boolean
                  description: ''
                column:
                  type: string
                  description: ''
                foreignTable:
                  type: string
                  description: ''
                nullsFirst:
                  type: boolean
                  description: ''
            table:
              type: string
              description: ''
              default: null
          required:
            - auth
            - table
      recomputeOnInputChanged: true
    - name: listUser
      autoRefresh: true
      fields:
        users:
          type: connected
          value: null
          connection:
            componentId: bg_3
            path: result.data
          fieldType: array
      inlineScript:
        content: >
          // import * as wmill from
          "https://deno.land/x/windmill@v1.72.0/mod.ts"


          export async function main(users: any[]) {
            return users.map((u) => ({
              label: `${u.first_name}  ${u.last_name}`,
              value: u.id
            }))
          }
        language: deno
        path: /listUser
        schema:
          $schema: 'https://json-schema.org/draft/2020-12/schema'
          type: object
          properties:
            users:
              type: array
              description: ''
              default: null
              items:
                type: string
          required:
            - users
      recomputeOnInputChanged: true
    - name: deleteCart
      autoRefresh: false
      fields: {}
      inlineScript:
        content: 'state.cart = []'
        language: frontend
        path: /deleteCart
      recomputeOnInputChanged: true
  subgrids:
    a-0:
      - '12':
          id: b
          customDragger: false
          customResizer: false
          draggable: true
          fixed: true
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 10
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: true
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 0
        id: b
        data:
          id: b
          type: drawercomponent
          card: false
          configuration:
            color:
              type: static
              value: dark
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonColorOptions
            disabled:
              type: eval
              expr: 'false'
              fieldType: boolean
            drawerTitle:
              type: static
              value: Drawer title
              fieldType: text
              onlyStatic: true
            fillContainer:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            label:
              type: static
              value: Add a new product
              fieldType: text
            noPadding:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            size:
              type: static
              value: xs
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonSizeOptions
          horizontalAlignment: right
          numberOfSubgrids: 1
          softWrap: true
          verticalAlignment: center
      - '12':
          id: i
          customDragger: false
          customResizer: false
          draggable: true
          fixed: true
          h: 19
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 1
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: true
          h: 8
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 1
          y: 0
        id: i
        data:
          id: i
          type: verticalsplitpanescomponent
          card: false
          configuration:
            noPadding:
              type: static
              value: true
              fieldType: boolean
              onlyStatic: true
          customCss:
            container:
              class: ''
              style: ''
          numberOfSubgrids: 2
          panes:
            - 60
            - 40
          softWrap: true
    a-1:
      - '12':
          id: d
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 20
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 8
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 0
        id: d
        data:
          id: d
          type: tabscomponent
          card: false
          configuration:
            noPadding:
              type: static
              value: true
              fieldType: boolean
              onlyStatic: true
          customCss:
            allTabs:
              class: ''
              style: ''
            container:
              class: ''
              style: ''
            selectedTab:
              class: ''
              style: ''
            tabRow:
              class: ''
              style: ''
          numberOfSubgrids: 3
          softWrap: true
          tabs:
            - List of orders
            - Analytics
            - Shipping map
    a-2:
      - '12':
          id: aw
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 20
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 8
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 10
        id: aw
        data:
          id: aw
          type: verticalsplitpanescomponent
          card: false
          configuration:
            noPadding:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
          customCss:
            container:
              class: ''
              style: ''
          numberOfSubgrids: 2
          panes:
            - 50
            - 50
          softWrap: true
    a-3:
      - '12':
          id: al
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 20
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 8
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 0
        id: al
        data:
          id: al
          type: verticalsplitpanescomponent
          card: false
          configuration:
            noPadding:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
          customCss:
            container:
              class: ''
              style: ''
          numberOfSubgrids: 2
          panes:
            - 60
            - 40
          softWrap: true
    ab-0:
      - '12':
          id: ac
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 17
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 10
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 0
        id: ac
        data:
          id: ac
          type: tablecomponent
          actionButtons:
            - id: ac_a
              type: buttoncomponent
              card: false
              componentInput:
                type: runnable
                fields:
                  auth:
                    type: static
                    value: '$res:u/henri/wm_showcases_supabase'
                    fieldType: object
                    format: resource-supabase
                  orderId:
                    type: connected
                    value: ''
                    connection:
                      componentId: ac
                      path: selectedRow.id
                    fieldType: string
                fieldType: any
                recomputeOnInputChanged: true
                runnable:
                  type: runnableByName
                  name: toggleRefund
                  inlineScript:
                    content: >-
                      import { Resource } from
                      "https://deno.land/x/windmill@v1.70.1/mod.ts";

                      import { createClient, SupabaseClient } from
                      "https://esm.sh/@supabase/supabase-js@2.10.0";


                      export async function main(
                        auth: Resource<"supabase">,
                        orderId: string
                      ) {
                        const client = createClient(auth.url, auth.key);

                        const { data } = await client.from('orders').select('refunded').eq('id', orderId);
                        if(data[0]?.refunded) {
                          return `Order with ID "${orderId}" is already refunded`;
                        }

                        const refunded = await setOrderRefundedValue(client, orderId, true);
                        
                        const promises = (refunded.product_ids as string[]).map(id => {
                          return client
                            .from('products')
                            .select('id, quantity')
                            .eq('id', id);
                        });
                        try {
                          const products = await Promise.all(promises);
                          const productValues = [];
                          for(const p of products) {
                            if(p.error) {
                              throw Error(p.error);
                            }
                            const { id, quantity } = p.data[0];
                            productValues.push({ id, quantity });
                          }
                          return await revertProductQuantities(client, productValues);
                        } catch (err: any) {
                          await setOrderRefundedValue(client, orderId, false);
                          throw Error(`Reverted refund because:\n${err}`);
                        }
                      }


                      async function setOrderRefundedValue(client:
                      SupabaseClient<any, "public", any>, id: string, value:
                      boolean) {
                        const { data, error } = await client
                          .from('orders')
                          .update({refunded: value})
                          .eq('id', id)
                          .select();

                        if(error || !data.length) {
                          throw Error(error || `Couldn't find order with ID "${id}"`);
                        }

                        return data[0];
                      }


                      async function revertProductQuantities(client:
                      SupabaseClient<any, "public", any>, products: {id: string,
                      quantity: number}[]) {
                        const promises = products.map(({id, quantity}) => {
                          return client
                            .from('products')
                            .update({quantity: quantity + 1})
                            .eq('id', id)
                            .select();
                        })

                        return await Promise.all(promises);
                      }
                    language: deno
                    path: /toggleRefund
                    schema:
                      $schema: 'https://json-schema.org/draft/2020-12/schema'
                      type: object
                      properties:
                        auth:
                          type: object
                          description: ''
                          default: null
                          format: resource-supabase
                        orderId:
                          type: string
                          description: ''
                          default: null
                      required:
                        - auth
                        - orderId
              configuration:
                afterIcon:
                  type: static
                  fieldType: icon-select
                  onlyStatic: true
                beforeIcon:
                  type: static
                  value: DollarSign
                  fieldType: icon-select
                  onlyStatic: true
                color:
                  type: static
                  value: dark
                  fieldType: select
                  optionValuesKey: buttonColorOptions
                disabled:
                  type: eval
                  expr: 'false'
                  fieldType: boolean
                fillContainer:
                  type: static
                goto:
                  type: static
                  value: ''
                  fieldType: text
                  tooltip: Go to an url on success if not empty
                gotoNewTab:
                  type: static
                  value: true
                  fieldType: boolean
                  tooltip: Go to create a new tab
                label:
                  type: static
                  value: Refund
                  fieldType: text
                onSuccess:
                  configuration:
                    '': {}
                  selected: ''
                size:
                  type: static
                  value: xs
                  fieldType: select
                  optionValuesKey: buttonSizeOptions
                triggerOnAppLoad:
                  type: static
              customCss:
                button:
                  class: ''
                  style: ''
              recomputeIds:
                - bg_0
                - bg_2
            - id: ac_b
              type: buttoncomponent
              card: false
              componentInput:
                type: runnable
                fields: {}
                fieldType: any
                recomputeOnInputChanged: true
                runnable:
                  type: runnableByName
                  name: Inline Script 0
                  inlineScript:
                    content: 'setTab(''a'', 2)'
                    language: frontend
                    path: frontend script
              configuration:
                afterIcon:
                  type: static
                  fieldType: icon-select
                  onlyStatic: true
                beforeIcon:
                  type: static
                  value: User
                  fieldType: icon-select
                  onlyStatic: true
                color:
                  type: static
                  value: light
                  fieldType: select
                  optionValuesKey: buttonColorOptions
                disabled:
                  type: eval
                  expr: 'false'
                  fieldType: boolean
                goto:
                  type: static
                  value: ''
                  fieldType: text
                  tooltip: Go to an url on success if not empty
                gotoNewTab:
                  type: static
                  value: true
                  fieldType: boolean
                  tooltip: Go to create a new tab
                label:
                  type: static
                  value: Go to user
                  fieldType: text
                size:
                  type: static
                  value: xs
                  fieldType: select
                  optionValuesKey: buttonSizeOptions
              customCss:
                button:
                  class: ''
                  style: ''
          card: true
          componentInput:
            type: runnable
            value:
              - id: 1
                name: A cell with a long name
                age: 42
              - id: 2
                name: A briefer cell
                age: 84
            fields:
              orders:
                type: connected
                value: null
                connection:
                  componentId: bg_2
                  path: result.data
                fieldType: array
            fieldType: array
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: selectOrdersColumns
              inlineScript:
                content: |
                  export async function main(orders: any[]) {
                    return orders?.map((order) => {
                      const {  total_price, country, city, address, id } = order;
                      return { id, total_price, address: `${address}, ${city}, ${country}`};
                    });
                  }
                language: deno
                path: /selectOrdersColumns
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    orders:
                      type: array
                      description: ''
                      default: null
                      items:
                        type: string
                  required:
                    - orders
            subFieldType: object
          configuration:
            pagination:
              configuration:
                '': {}
              selected: ''
            search:
              type: static
              value: By Component
              fieldType: select
              onlyStatic: true
              optionValuesKey: tableSearchOptions
          customCss:
            container:
              class: ''
              style: ''
            tableBody:
              class: ''
              style: ''
            tableFooter:
              class: ''
              style: ''
            tableHeader:
              class: ''
              style: ''
    ab-1:
      - '12':
          id: ad
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 17
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 8
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 0
        id: ad
        data:
          id: ad
          type: containercomponent
          card: false
          configuration:
            noPadding:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
          customCss:
            container:
              class: m-2
              style: ''
          numberOfSubgrids: 1
          softWrap: true
    ad-0:
      - '12':
          id: af
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 10
        id: af
        data:
          id: af
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Order items
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: ae
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 15
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 1
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 10
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 0
        id: ae
        data:
          id: ae
          type: tablecomponent
          actionButtons:
            - id: ae_a
              type: buttoncomponent
              card: false
              componentInput:
                type: runnable
                fields: {}
                fieldType: any
                recomputeOnInputChanged: true
                runnable:
                  type: runnableByName
                  name: Inline Script 0
                  inlineScript:
                    content: 'setTab(''a'', 0)'
                    language: frontend
                    path: frontend script
              configuration:
                afterIcon:
                  type: static
                  fieldType: icon-select
                  onlyStatic: true
                beforeIcon:
                  type: static
                  value: ArrowUpRight
                  fieldType: icon-select
                  onlyStatic: true
                color:
                  type: static
                  value: dark
                  fieldType: select
                  optionValuesKey: buttonColorOptions
                disabled:
                  type: eval
                  expr: 'false'
                  fieldType: boolean
                goto:
                  type: static
                  value: ''
                  fieldType: text
                  tooltip: Go to an url on success if not empty
                gotoNewTab:
                  type: static
                  value: true
                  fieldType: boolean
                  tooltip: Go to create a new tab
                label:
                  type: static
                  value: Go to product
                  fieldType: text
                size:
                  type: static
                  value: xs
                  fieldType: select
                  optionValuesKey: buttonSizeOptions
              customCss:
                button:
                  class: ''
                  style: ''
          card: true
          componentInput:
            type: runnable
            value:
              - id: 1
                name: A cell with a long name
                age: 42
              - id: 2
                name: A briefer cell
                age: 84
            fields:
              orders:
                type: connected
                value: null
                connection:
                  componentId: bg_2
                  path: result.data
                fieldType: array
              products:
                type: connected
                value: null
                connection:
                  componentId: bg_0
                  path: result.data
                fieldType: array
              selectedOrderIndex:
                type: connected
                value: null
                connection:
                  componentId: ac
                  path: selectedRowIndex
                fieldType: number
            fieldType: array
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: getOrderProducts
              inlineScript:
                content: >
                  // import * as wmill from
                  "https://deno.land/x/windmill@v1.72.0/mod.ts"


                  export async function main(
                    selectedOrderIndex: number,
                    orders: any[],
                    products: any[],
                  ) {
                    if (!orders) {
                      return [];
                    }

                    return orders[selectedOrderIndex].product_ids.map((id) => {
                      const product = products?.find((p) => p.id === id);

                      if (!product) {
                        return {};
                      }

                      const { title, description, price } = product;

                      return { title, description, price, quantity: 1 };
                    });
                  }
                language: deno
                path: /getOrderProducts
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    orders:
                      type: array
                      default: null
                      items:
                        type: string
                    products:
                      type: array
                      default: null
                      items:
                        type: string
                    selectedOrderIndex:
                      type: number
                      default: null
                  required:
                    - selectedOrderIndex
                    - orders
                    - products
            subFieldType: object
          configuration:
            pagination:
              configuration:
                '': {}
              selected: ''
            search:
              type: static
              value: Disabled
              fieldType: select
              onlyStatic: true
              optionValuesKey: tableSearchOptions
          customCss:
            container:
              class: ''
              style: ''
            tableBody:
              class: ''
              style: ''
            tableFooter:
              class: ''
              style: ''
            tableHeader:
              class: ''
              style: ''
    al-0:
      - '12':
          id: an
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 2
          y: 0
        id: an
        data:
          id: an
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Select a user
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
            tooltip:
              type: static
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: am
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 1
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 0
        id: am
        data:
          id: am
          type: selectcomponent
          card: false
          configuration:
            create:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            defaultValue:
              type: static
              fieldType: object
            items:
              type: connected
              value:
                - value: foo
                  label: Foo
                - value: bar
                  label: Bar
              connection:
                componentId: bg_4
                path: result
              fieldType: array
              subFieldType: object
            placeholder:
              type: static
              value: Select an item
              fieldType: text
              onlyStatic: true
          customCss:
            input:
              style: ''
          softWrap: true
          verticalAlignment: center
      - '12':
          id: ao
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 17
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 2
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 10
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 1
        id: ao
        data:
          id: ao
          type: tablecomponent
          actionButtons:
            - id: ao_a
              type: buttoncomponent
              card: false
              componentInput:
                type: runnable
                fields: {}
                fieldType: any
                recomputeOnInputChanged: true
                runnable:
                  type: runnableByName
                  name: addToCart
                  inlineScript:
                    content: |

                      if (state.cart) {
                        state.cart = [ao.selectedRow.id, ...state.cart]
                      } else {
                        state.cart = [ao.selectedRow.id]
                      }
                    language: frontend
                    path: /addToCart
              configuration:
                afterIcon:
                  type: static
                  fieldType: icon-select
                  onlyStatic: true
                beforeIcon:
                  type: static
                  value: PlusCircle
                  fieldType: icon-select
                  onlyStatic: true
                color:
                  type: static
                  value: blue
                  fieldType: select
                  optionValuesKey: buttonColorOptions
                disabled:
                  type: eval
                  expr: 'false'
                  fieldType: boolean
                fillContainer:
                  type: static
                goto:
                  type: static
                  value: ''
                  fieldType: text
                  tooltip: Go to an url on success if not empty
                gotoNewTab:
                  type: static
                  value: true
                  fieldType: boolean
                  tooltip: Go to create a new tab
                label:
                  type: static
                  value: Add
                  fieldType: text
                onSuccess:
                  configuration:
                    '': {}
                  selected: ''
                size:
                  type: static
                  value: xs
                  fieldType: select
                  optionValuesKey: buttonSizeOptions
                triggerOnAppLoad:
                  type: static
              customCss:
                button:
                  class: ''
                  style: ''
              recomputeIds:
                - ap
          card: true
          componentInput:
            type: connected
            value:
              - id: 1
                name: A cell with a long name
                age: 42
              - id: 2
                name: A briefer cell
                age: 84
            connection:
              componentId: j
              path: result
            fieldType: array
            subFieldType: object
          configuration:
            search:
              type: static
              value: By Component
              fieldType: select
              onlyStatic: true
              optionValuesKey: tableSearchOptions
          customCss:
            container:
              class: ''
              style: ''
            tableBody:
              class: ''
              style: ''
            tableFooter:
              class: ''
              style: ''
            tableHeader:
              class: ''
              style: ''
    al-1:
      - '12':
          id: aq
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 10
        id: aq
        data:
          id: aq
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Cart
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: ap
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 14
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 1
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 10
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 0
        id: ap
        data:
          id: ap
          type: tablecomponent
          actionButtons:
            - id: ap_a
              type: buttoncomponent
              card: false
              componentInput:
                type: runnable
                fields: {}
                fieldType: any
                recomputeOnInputChanged: true
                runnable:
                  type: runnableByName
                  name: Inline Script 0
                  inlineScript:
                    content: |-
                      if (state.cart) {
                        state.cart.splice(ap.selectedRowIndex, 1)
                      }
                    language: frontend
                    path: frontend script
              configuration:
                afterIcon:
                  type: static
                  fieldType: icon-select
                  onlyStatic: true
                beforeIcon:
                  type: static
                  fieldType: icon-select
                  onlyStatic: true
                color:
                  type: static
                  value: red
                  fieldType: select
                  optionValuesKey: buttonColorOptions
                disabled:
                  type: eval
                  expr: 'false'
                  fieldType: boolean
                goto:
                  type: static
                  value: ''
                  fieldType: text
                  tooltip: Go to an url on success if not empty
                gotoNewTab:
                  type: static
                  value: true
                  fieldType: boolean
                  tooltip: Go to create a new tab
                label:
                  type: static
                  value: Remove
                  fieldType: text
                size:
                  type: static
                  value: xs
                  fieldType: select
                  optionValuesKey: buttonSizeOptions
              customCss:
                button:
                  class: ''
                  style: ''
              recomputeIds:
                - ap
          card: true
          componentInput:
            type: runnable
            value:
              - id: 1
                name: A cell with a long name
                age: 42
              - id: 2
                name: A briefer cell
                age: 84
            fields: {}
            fieldType: array
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: loadCartFromState
              inlineScript:
                content: >-

                  return state.cart ? state.cart.map(id => j.result.find(x =>
                  x.id === id)) : []
                language: frontend
                path: /loadCartFromState
            subFieldType: object
          configuration:
            pagination:
              configuration:
                '': {}
              selected: ''
            search:
              type: static
              value: Disabled
              fieldType: select
              onlyStatic: true
              optionValuesKey: tableSearchOptions
          customCss:
            container:
              class: ''
              style: ''
            tableBody:
              class: ''
              style: ''
            tableFooter:
              class: ''
              style: ''
            tableHeader:
              class: ''
              style: ''
      - '12':
          id: ba
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 15
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 12
        id: ba
        data:
          id: ba
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: >-
              Total: ${ap.result.reduce((accu, curr) => accu + curr.price/100,
              0)} CHF
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: right
          softWrap: false
          verticalAlignment: center
      - '12':
          id: at
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 18
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 11
        id: at
        data:
          id: at
          type: buttoncomponent
          card: false
          componentInput:
            type: runnable
            fields: {}
            fieldType: any
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: Inline Script 0
              inlineScript:
                content: 'state.cart = []'
                language: frontend
                path: /Inline Script 0
          configuration:
            afterIcon:
              type: static
              fieldType: icon-select
              onlyStatic: true
            beforeIcon:
              type: static
              value: Trash
              fieldType: icon-select
              onlyStatic: true
            color:
              type: static
              value: red
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonColorOptions
            disabled:
              type: eval
              expr: 'false'
              fieldType: boolean
            fillContainer:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            goto:
              type: static
              value: ''
              fieldType: text
              tooltip: Go to an url on success if not empty
            gotoNewTab:
              type: static
              value: true
              fieldType: boolean
              tooltip: Go to create a new tab
            label:
              type: static
              value: Delete cart
              fieldType: text
            onSuccess:
              configuration:
                '': {}
              selected: ''
            size:
              type: static
              value: xs
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonSizeOptions
            triggerOnAppLoad:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
          customCss:
            button:
              class: ''
              style: ''
          horizontalAlignment: left
          recomputeIds:
            - ap
          softWrap: true
          verticalAlignment: center
      - '12':
          id: ar
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 5
          x: 7
          y: 18
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 1
          y: 10
        id: ar
        data:
          id: ar
          type: buttoncomponent
          card: false
          componentInput:
            type: runnable
            fields:
              auth:
                type: static
                value: '$res:f/examples/demo_supabase'
                fieldType: object
                format: resource-supabase
              customerId:
                type: connected
                value: null
                connection:
                  componentId: am
                  path: result
                fieldType: string
              productIds:
                type: connected
                value: []
                connection:
                  componentId: state
                  path: cart
                fieldType: array
            fieldType: any
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: checkout
              inlineScript:
                content: >-
                  import { Resource } from
                  "https://deno.land/x/windmill@v1.70.1/mod.ts";

                  import {
                    createClient,
                    SupabaseClient,
                  } from "https://esm.sh/@supabase/supabase-js@2.10.0";


                  export async function main(
                    auth: Resource<"supabase">,
                    customerId: string,
                    productIds: string[],
                  ) {
                    const client = createClient(auth.url, auth.key);

                    productIds = productIds.filter(Boolean);
                    const { country, city, address } = await getCustomer(client, customerId);
                    const total_price = await getTotalPrice(client, productIds);

                    return await client.from("orders").insert({
                      customer_id: customerId,
                      product_ids: productIds,
                      country,
                      city,
                      address,
                      total_price,
                    }).select();
                  }


                  async function getCustomer(client: SupabaseClient, id: string)
                  {
                    const { data, error } = await client.from("customers").select(
                      "country, city, address",
                    ).eq("id", id);

                    if (error || !data.length) {
                      throw Error(error?.message || `Couldn't find customer with ID "${id}"`);
                    }

                    return data[0];
                  }


                  async function getTotalPrice(client: SupabaseClient, ids:
                  string[]) {
                    const promises = ids.map((id) =>
                      client.from("products").select("price").eq("id", id)
                    );
                    const res = await Promise.all(promises);
                    let total = 0;

                    for (let i = 0; i < res.length; i++) {
                      const { data, error } = res[i];
                      if (error || !data.length) {
                        throw Error(
                          error?.message || `Couldn't find product with ID "${ids[i]}"`,
                        );
                      }
                      total += data[0].price;
                    }

                    return total;
                  }
                language: deno
                path: /checkout
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    auth:
                      type: object
                      description: ''
                      default: null
                      format: resource-supabase
                    customerId:
                      type: string
                      description: ''
                      default: null
                    productIds:
                      type: array
                      description: ''
                      default: null
                      items:
                        type: string
                  required:
                    - auth
                    - customerId
                    - productIds
          configuration:
            afterIcon:
              type: static
              fieldType: icon-select
              onlyStatic: true
            beforeIcon:
              type: static
              value: ArrowRight
              fieldType: icon-select
              onlyStatic: true
            color:
              type: static
              value: dark
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonColorOptions
            disabled:
              type: eval
              expr: state.cart?.length === 0
              fieldType: boolean
            fillContainer:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            goto:
              type: static
              value: ''
              fieldType: text
              tooltip: Go to an url on success if not empty
            gotoNewTab:
              type: static
              value: true
              fieldType: boolean
              tooltip: Go to create a new tab
            label:
              type: static
              value: Checkout
              fieldType: text
            onSuccess:
              configuration:
                '': {}
              selected: ''
            size:
              type: static
              value: xs
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonSizeOptions
            triggerOnAppLoad:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
          customCss:
            button:
              class: ''
              style: ''
          horizontalAlignment: right
          recomputeIds:
            - bg_6
            - bg_5
          softWrap: true
          verticalAlignment: center
    aw-0:
      - '12':
          id: aj
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 19
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 10
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 0
        id: aj
        data:
          id: aj
          type: tablecomponent
          actionButtons: []
          card: true
          componentInput:
            type: connected
            value:
              - id: 1
                name: A cell with a long name
                age: 42
              - id: 2
                name: A briefer cell
                age: 84
            connection:
              componentId: bg_3
              path: result.data
            fieldType: array
            subFieldType: object
          configuration:
            search:
              type: static
              value: By Component
              fieldType: select
              onlyStatic: true
              optionValuesKey: tableSearchOptions
          customCss:
            container:
              class: ''
              style: ''
            tableBody:
              class: ''
              style: ''
            tableFooter:
              class: ''
              style: ''
            tableHeader:
              class: ''
              style: ''
    aw-1:
      - '12':
          id: ay
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 10
        id: ay
        data:
          id: ay
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: >-
              Orders of ${aj.selectedRow.first_name}
              ${aj.selectedRow.last_name} 
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: ax
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 18
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 1
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 10
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 0
        id: ax
        data:
          id: ax
          type: tablecomponent
          actionButtons:
            - id: ax_a
              type: buttoncomponent
              card: false
              componentInput:
                type: runnable
                fields: {}
                fieldType: any
                recomputeOnInputChanged: true
                runnable:
                  type: runnableByName
                  name: Inline Script 0
                  inlineScript:
                    content: 'setTab(''a'', 1)'
                    language: frontend
                    path: frontend script
              configuration:
                afterIcon:
                  type: static
                  fieldType: icon-select
                  onlyStatic: true
                beforeIcon:
                  type: static
                  fieldType: icon-select
                  onlyStatic: true
                color:
                  type: static
                  value: dark
                  fieldType: select
                  optionValuesKey: buttonColorOptions
                disabled:
                  type: eval
                  expr: 'false'
                  fieldType: boolean
                goto:
                  type: static
                  value: ''
                  fieldType: text
                  tooltip: Go to an url on success if not empty
                gotoNewTab:
                  type: static
                  value: true
                  fieldType: boolean
                  tooltip: Go to create a new tab
                label:
                  type: static
                  value: Go to order
                  fieldType: text
                size:
                  type: static
                  value: xs
                  fieldType: select
                  optionValuesKey: buttonSizeOptions
              customCss:
                button:
                  class: ''
                  style: ''
          card: true
          componentInput:
            type: runnable
            value:
              - id: 1
                name: A cell with a long name
                age: 42
              - id: 2
                name: A briefer cell
                age: 84
            fields:
              auth:
                type: static
                value: '$res:f/examples/demo_supabase'
                fieldType: object
                format: resource-supabase
              customerId:
                type: connected
                value: null
                connection:
                  componentId: aj
                  path: selectedRow.id
                fieldType: string
            fieldType: array
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: loadOrderByCustomer
              inlineScript:
                content: >
                  import { Resource } from
                  "https://deno.land/x/windmill@v1.70.1/mod.ts";

                  import { createClient } from
                  "https://esm.sh/@supabase/supabase-js@2";


                  export async function main(
                    auth: Resource<"supabase">,
                    customerId: string
                  ) {
                    const client = createClient(auth.url, auth.key);
                    let query = client.from('orders').select().eq("customer_id", customerId)

                    const response = await query;

                    return response.data.map(x => ({ id: x.id }))

                  }
                language: deno
                path: /loadOrderByCustomer
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    auth:
                      type: object
                      description: ''
                      default: null
                      format: resource-supabase
                    customerId:
                      type: string
                      description: ''
                      default: null
                  required:
                    - auth
                    - customerId
            subFieldType: object
          configuration:
            pagination:
              configuration:
                '': {}
              selected: ''
            search:
              type: static
              value: Disabled
              fieldType: select
              onlyStatic: true
              optionValuesKey: tableSearchOptions
          customCss:
            container:
              class: ''
              style: ''
            tableBody:
              class: ''
              style: ''
            tableFooter:
              class: ''
              style: ''
            tableHeader:
              class: ''
              style: ''
    b-0:
      - '12':
          id: s
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 0
        id: s
        data:
          id: s
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Name
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: t
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 1
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 1
          y: 0
        id: t
        data:
          id: t
          type: textinputcomponent
          card: false
          configuration:
            defaultValue:
              type: static
              fieldType: text
            placeholder:
              type: static
              value: Type...
              fieldType: text
              onlyStatic: true
          customCss:
            input:
              class: ''
              style: ''
          softWrap: true
          verticalAlignment: center
      - '12':
          id: v
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 2
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 5
        id: v
        data:
          id: v
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Description
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: w
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 3
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 1
          y: 5
        id: w
        data:
          id: w
          type: textinputcomponent
          card: false
          configuration:
            defaultValue:
              type: static
              fieldType: text
            placeholder:
              type: static
              value: Type...
              fieldType: text
              onlyStatic: true
          customCss:
            input:
              class: ''
              style: ''
          softWrap: true
          verticalAlignment: center
      - '12':
          id: x
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 4
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 6
        id: x
        data:
          id: x
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Quantity
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: y
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 5
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 1
          y: 6
        id: y
        data:
          id: y
          type: numberinputcomponent
          card: false
          configuration:
            defaultValue:
              type: static
              value: 1
              fieldType: number
            max:
              type: static
              fieldType: number
            min:
              type: static
              value: 0
              fieldType: number
            placeholder:
              type: static
              value: Type...
              fieldType: text
              onlyStatic: true
            step:
              type: static
              value: 1
              fieldType: number
          customCss:
            input:
              class: ''
              style: ''
          softWrap: true
          verticalAlignment: center
      - '12':
          id: z
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 6
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 7
        id: z
        data:
          id: z
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Image
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: u
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 6
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 7
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 4
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 1
        id: u
        data:
          id: u
          type: fileinputcomponent
          card: false
          configuration:
            acceptedFileTypes:
              type: static
              value:
                - image/*
                - application/pdf
              fieldType: array
              onlyStatic: true
            allowMultiple:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
              tooltip: 'If allowed, the user will be able to select more than one file'
            text:
              type: static
              value: Drag and drop files or click to select them
              fieldType: text
              onlyStatic: true
          customCss:
            container:
              class: ''
              style: ''
      - '12':
          id: aa
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 2
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 9
          y: 14
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 1
          y: 7
        id: aa
        data:
          id: aa
          type: buttoncomponent
          card: false
          componentInput:
            type: runnable
            fields: {}
            fieldType: any
          configuration:
            afterIcon:
              type: static
              fieldType: icon-select
              onlyStatic: true
            beforeIcon:
              type: static
              value: Plus
              fieldType: icon-select
              onlyStatic: true
            color:
              type: static
              value: gray
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonColorOptions
            disabled:
              type: eval
              expr: 'false'
              fieldType: boolean
            fillContainer:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            goto:
              type: static
              value: ''
              fieldType: text
              tooltip: Go to an url on success if not empty
            gotoNewTab:
              type: static
              value: true
              fieldType: boolean
              tooltip: Go to create a new tab
            label:
              type: static
              value: Create product
              fieldType: text
            onSuccess:
              configuration:
                '': {}
              selected: ''
            size:
              type: static
              value: sm
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonSizeOptions
            triggerOnAppLoad:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
          customCss:
            button:
              class: ''
              style: ''
          horizontalAlignment: center
          softWrap: true
          verticalAlignment: center
    d-0:
      - '12':
          id: ab
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 18
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 8
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 0
        id: ab
        data:
          id: ab
          type: verticalsplitpanescomponent
          card: false
          configuration:
            noPadding:
              type: static
              value: true
              fieldType: boolean
              onlyStatic: true
          customCss:
            container:
              class: ''
              style: ''
          numberOfSubgrids: 2
          panes:
            - 60
            - 40
          softWrap: true
    d-1:
      - '12':
          id: e
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 7
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 5
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 8
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 0
        id: e
        data:
          id: e
          type: piechartcomponent
          card: true
          componentInput:
            type: runnable
            value:
              data:
                - 25
                - 50
                - 25
              labels:
                - Pie
                - Charts
                - <3
            fields:
              orders:
                type: connected
                value: null
                connection:
                  componentId: bg_2
                  path: result.data
                fieldType: array
            fieldType: object
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: pieChartData
              inlineScript:
                content: |
                  export async function main(orders: any[]) {
                    let one = 0;
                    let two = 0;
                    let more = 0;

                    orders.forEach((o) => {
                      if (o.product_ids.length === 1) {
                        one++;
                      } else if (o.product_ids.length === 2) {
                        two++;
                      } else {
                        more++;
                      }
                    });

                    return {
                      "data": [
                        one,
                        two,
                        more,
                      ],
                      "labels": [
                        "1 item",
                        "2 items",
                        "More than 2 items",
                      ],
                    };
                  }
                language: deno
                path: /pieChartData
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    orders:
                      type: array
                      description: ''
                      default: null
                      items:
                        type: string
                  required:
                    - orders
          configuration:
            doughnutStyle:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            theme:
              type: static
              value: theme2
              fieldType: select
              onlyStatic: true
              optionValuesKey: chartThemeOptions
          customCss:
            container:
              class: ''
              style: ''
    d-2:
      - '12':
          id: bb
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 10
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 6
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 1
        id: bb
        data:
          id: bb
          type: mapcomponent
          card: false
          configuration:
            latitude:
              type: static
              value: 50
              fieldType: number
            longitude:
              type: static
              value: 15
              fieldType: number
            markers:
              type: static
              value:
                - color: '#dc2626'
                  lat: 41.902783
                  lon: 12.496366
                  radius: 7
                  strokeColor: '#fca5a5'
                  strokeWidth: 3
                  title: Rome
                - lat: 51.507359
                  lon: -0.136439
                  title: London
              fieldType: array
              fileUpload:
                accept: application/json
                convertTo: text
              subFieldType: object
            zoom:
              type: static
              value: 3
              fieldType: number
          customCss:
            map:
              class: ''
              style: ''
    i-0:
      - '12':
          id: j
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 18
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 10
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 0
        id: j
        data:
          id: j
          type: tablecomponent
          actionButtons: []
          card: true
          componentInput:
            type: runnable
            value:
              - description: The latest smartphone from Apple
                price: 999
                quantity: 50
                title: iPhone 13
            connection:
              componentId: bg_0
              path: result.data
            fields:
              products:
                type: connected
                value: null
                connection:
                  componentId: bg_0
                  path: result.data
                fieldType: array
            fieldType: array
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: selectProductColumns
              inlineScript:
                content: |
                  export async function main(products: any[]) {
                    return products?.map((product) => {
                      const { id, title, description, price, quantity } = product;
                      return { id, title, description, price, quantity };
                    });
                  }
                language: deno
                path: /selectProductColumns
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    products:
                      type: array
                      description: ''
                      default: null
                      items:
                        type: string
                  required:
                    - products
            subFieldType: object
          configuration:
            pagination:
              configuration:
                '': {}
              selected: ''
            search:
              type: static
              value: By Component
              fieldType: select
              onlyStatic: true
              optionValuesKey: tableSearchOptions
          customCss:
            container:
              class: 'capitalize '
              style: ''
            tableBody:
              class: ''
              style: ''
            tableFooter:
              class: ''
              style: ''
            tableHeader:
              class: ''
              style: ''
    i-1:
      - '12':
          id: m
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 0
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 1
        id: m
        data:
          id: m
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Name
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: n
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 1
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 1
          y: 1
        id: n
        data:
          id: n
          type: textinputcomponent
          card: false
          configuration:
            defaultValue:
              type: connected
              connection:
                componentId: j
                path: selectedRow.title
              fieldType: text
            placeholder:
              type: static
              value: Type...
              fieldType: text
              onlyStatic: true
          customCss:
            input:
              class: ''
              style: ''
          softWrap: true
          verticalAlignment: center
      - '12':
          id: o
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 2
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 2
        id: o
        data:
          id: o
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Description
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: p
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 3
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 1
          y: 2
        id: p
        data:
          id: p
          type: textinputcomponent
          card: false
          configuration:
            defaultValue:
              type: connected
              connection:
                componentId: j
                path: selectedRow.description
              fieldType: text
            placeholder:
              type: static
              value: Type...
              fieldType: text
              onlyStatic: true
          customCss:
            input:
              class: ''
              style: ''
          softWrap: true
          verticalAlignment: center
      - '12':
          id: l
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 4
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 2
          y: 0
        id: l
        data:
          id: l
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Quantity
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: k
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 5
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 0
        id: k
        data:
          id: k
          type: numberinputcomponent
          card: false
          configuration:
            defaultValue:
              type: connected
              connection:
                componentId: j
                path: selectedRow.quantity
              fieldType: number
            max:
              type: static
              fieldType: number
            min:
              type: static
              fieldType: number
            placeholder:
              type: static
              value: Type...
              fieldType: text
              onlyStatic: true
            step:
              type: static
              value: 1
              fieldType: number
          customCss:
            input:
              class: ''
              style: ''
          softWrap: true
          verticalAlignment: center
      - '12':
          id: au
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 6
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 1
          y: 3
        id: au
        data:
          id: au
          type: textcomponent
          card: false
          componentInput:
            type: template
            value: 'Hello ${ctx.username}'
            eval: Price
            fieldType: template
          configuration:
            copyButton:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
            style:
              type: static
              value: Label
              fieldType: select
              onlyStatic: true
              optionValuesKey: textStyleOptions
          customCss:
            text:
              class: ''
              style: ''
          horizontalAlignment: left
          softWrap: false
          verticalAlignment: center
      - '12':
          id: av
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 7
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 2
          x: 0
          y: 8
        id: av
        data:
          id: av
          type: numberinputcomponent
          card: false
          configuration:
            defaultValue:
              type: connected
              connection:
                componentId: j
                path: selectedRow.price
              fieldType: number
            max:
              type: static
              fieldType: number
            min:
              type: static
              fieldType: number
            placeholder:
              type: static
              value: Type...
              fieldType: text
              onlyStatic: true
            step:
              type: static
              value: 1
              fieldType: number
          customCss:
            input:
              class: ''
              style: ''
          softWrap: true
          verticalAlignment: center
      - '12':
          id: r
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 6
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 8
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 4
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 3
          x: 0
          y: 4
        id: r
        data:
          id: r
          type: imagecomponent
          card: false
          configuration:
            altText:
              type: static
              value: ''
              fieldType: text
              onlyStatic: true
              tooltip: >-
                This text will appear if the image can't be loaded for any
                reason
            imageFit:
              type: static
              value: contain
              fieldType: select
              onlyStatic: true
              optionValuesKey: objectFitOptions
            source:
              type: connected
              value: /logo.svg
              connection:
                componentId: bg_1
                path: result
              fieldType: text
              fileUpload:
                accept: image/*
                convertTo: base64
          customCss:
            image:
              class: ''
              style: ''
      - '12':
          id: q
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 12
          min:
            h: 1
            w: 1
          resizable: true
          w: 12
          x: 0
          y: 17
        '3':
          customDragger: false
          customResizer: false
          draggable: true
          fixed: false
          h: 1
          max:
            h: 100
            w: 3
          min:
            h: 1
            w: 1
          resizable: true
          w: 1
          x: 0
          y: 3
        id: q
        data:
          id: q
          type: buttoncomponent
          card: false
          componentInput:
            type: runnable
            fields:
              id:
                type: connected
                value: null
                connection:
                  componentId: j
                  path: selectedRow.id
                fieldType: string
              description:
                type: connected
                value: null
                connection:
                  componentId: p
                  path: result
                fieldType: string
              auth:
                type: static
                value: '$res:f/examples/demo_supabase'
                fieldType: object
                format: resource-supabase
              price:
                type: connected
                value: null
                connection:
                  componentId: av
                  path: result
                fieldType: number
              quantity:
                type: connected
                value: null
                connection:
                  componentId: k
                  path: result
                fieldType: number
              title:
                type: connected
                value: null
                connection:
                  componentId: n
                  path: result
                fieldType: string
            fieldType: any
            recomputeOnInputChanged: true
            runnable:
              type: runnableByName
              name: updateProduct
              inlineScript:
                content: >
                  import { Resource } from
                  "https://deno.land/x/windmill@v1.70.1/mod.ts";

                  import { createClient } from
                  "https://esm.sh/@supabase/supabase-js@2";


                  export async function main(
                    auth: Resource<"supabase">,
                    id: string,
                    title: string,
                    description: string,
                    quantity: number,
                    price: number,
                  ) {
                    const client = createClient(auth.url, auth.key);

                    return await client
                      .from("products")
                      .update({ title, description, quantity, price })
                      .eq("id", id);
                  }
                language: deno
                path: hub/648/supabase/update_data
                schema:
                  $schema: 'https://json-schema.org/draft/2020-12/schema'
                  type: object
                  properties:
                    id:
                      type: string
                      description: ''
                      default: null
                    description:
                      type: string
                      description: ''
                      default: null
                    auth:
                      type: object
                      description: ''
                      default: null
                      format: resource-supabase
                    price:
                      type: number
                      description: ''
                      default: null
                    quantity:
                      type: number
                      description: ''
                      default: null
                    title:
                      type: string
                      description: ''
                      default: null
                  required:
                    - auth
                    - id
                    - title
                    - description
                    - quantity
                    - price
          configuration:
            afterIcon:
              type: static
              fieldType: icon-select
              onlyStatic: true
            beforeIcon:
              type: static
              value: Save
              fieldType: icon-select
              onlyStatic: true
            color:
              type: static
              value: dark
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonColorOptions
            disabled:
              type: eval
              expr: 'false'
              fieldType: boolean
            fillContainer:
              type: static
              value: true
              fieldType: boolean
              onlyStatic: true
            goto:
              type: static
              value: ''
              fieldType: text
              tooltip: Go to an url on success if not empty
            gotoNewTab:
              type: static
              value: true
              fieldType: boolean
              tooltip: Go to create a new tab
            label:
              type: static
              value: Save
              fieldType: text
            size:
              type: static
              value: xs
              fieldType: select
              onlyStatic: true
              optionValuesKey: buttonSizeOptions
            triggerOnAppLoad:
              type: static
              value: false
              fieldType: boolean
              onlyStatic: true
          customCss:
            button:
              class: ''
              style: ''
          horizontalAlignment: right
          recomputeIds:
            - bg_0
          softWrap: true
          verticalAlignment: center
  unusedInlineScripts: []
policy:
  execution_mode: publisher
  on_behalf_of: u/github
  on_behalf_of_email: github-sync2@windmill.dev
  triggerables:
    rawscript/0fc9afb3c876f0393da742d9e43c29bbd011397034da32caa19cdb7f4e069b4c:
      auth: '$res:f/examples/demo_supabase'
      columns: null
      count: null
      filter: null
      head: null
      limit: null
      order: null
      table: orders
    rawscript/1f7dc8e50201accc47245ae1f132d1b87f121ee9b3efe63ec86b5acf11023a44:
      auth: '$res:f/examples/demo_supabase'
    rawscript/2238f7d181f880a1b25230c793a932ef5b5b3b344214525ad02fdef6b69dbcdb: {}
    rawscript/287e1830e0eb847eb3e34e58a108a2ecd5be63c913ecbb5e5b17a5c847c10e70: {}
    rawscript/2b333c674ec5a18caec9d0a59a2b1afb78df48ad8a11576d3ecacd13502d86a2:
      auth: '$res:f/examples/demo_supabase'
      columns: null
      count: null
      filter: null
      head: null
      limit: null
      order: null
      table: products
    rawscript/301478c282cd0dfe4633a60267fd25a6f317cdf1ccac5145ed2b4d34a4d83936: {}
    rawscript/46f722936f8afa7858453ed0c4cb21e7def702d455f5f1957d3b9a366da2421e: {}
    rawscript/4aa1edb0ca2e107d16b060709218c6a2e4028e8b8f25be3a42d1087cd9a37b17: {}
    rawscript/4daeb0c09a282117d2aee2db4a89ac2f18c51d9d51477e78ac3df086ffd9d962:
      auth: '$res:f/examples/demo_supabase'
      columns: null
      count: null
      filter: null
      head: null
      limit: null
      order: null
      table: customers
    rawscript/79254a6b92a44dbd31b4e38c4a33b983997ed33f353275581a3cc97aaa64599c: {}
    rawscript/7aa4c201af40e54bb24a1a3c4ff46c63431dad32b4bd28fc5039bf2e823b42b7:
      auth: '$res:u/henri/wm_showcases_supabase'
    rawscript/8bbe6a0146ba935a6ce17ea427a8391452345ce6a63c39589ca0979a65de7ed0: {}
    rawscript/8e456100f65e6a4a135a74532f63d52c12d46cde68a8a4e965c1937beb24ee40: {}
    rawscript/9a3f132bdfe05c1fb51c7e77e798100b76ed33cc801d82f24198057562a248e8: {}
    rawscript/b45a10d5c6ba38f72c716b43ad04e0d6c3eaac672148b5bcfc75b593b25e6a54: {}
    rawscript/be54fbbaee55accca6fb7f362e19e82d36536d314c0f784c66e82a48e56a9cb2:
      auth: '$res:f/examples/demo_supabase'
    rawscript/c2d55b8bd906c097307308c26c3962a0cbe8cc96343b3dfb6b8d7f58f9f9972e: {}
    rawscript/c9cb4c4f884d998812923cdfb7ee1a20ff6e2b20068a329589e5f4184fe08350: {}
    rawscript/cfddc2cdc871fc011b37a6aebda250d0cf05b996829fdd1fa741490b668d4448:
      auth: '$res:f/examples/demo_supabase'
    rawscript/fa14df9c0bc7be852550ebe01996be628ccf535c6e8ac6f57dae2f45518f6e9a: {}
